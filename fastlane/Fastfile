# frozen_string_literal: true

default_platform(:ios)
PRODUCT_NAME_GLIA_WIDGETS = 'GliaWidgets'

PATH_ROOT = Dir.pwd.chomp("/fastlane")
PATH_GLIA_PROJECT_DIR = "#{PATH_ROOT}/#{PRODUCT_NAME_GLIA_WIDGETS}"
PATH_GLIA_STATIC_VALUES = "#{PATH_GLIA_PROJECT_DIR}/StaticValues.swift"

platform :ios do
  desc "Creates a pull request in the repository with the required files to increment "\
    "the project version."
  lane :create_pr_for_increment_project_version do |options|
    type = options[:type]
    new_version = increment_project_version(type: type)
    branch_name = 'increment-project-version'
    message = "Update project version to #{new_version}"

    sh "cd .. && scripts/commit_unstaged_changes.sh '#{branch_name}' '#{message}'"
    create_pull_request(
      repo: 'salemove/ios-sdk-widgets',
      title: message,
      head: branch_name,
      base: 'master',
      team_reviewers: ["tm-mobile-ios"]
    )
  end

  desc "Increments versions in Xcode projects and Podspec file "\
    "according to given type.\n\n"\
    "Usage:\n"\
    "fastlane increment_project_version type:major - increments X.0.0\n"\
    "fastlane increment_project_version type:minor - increments 0.X.0\n"\
    "fastlane increment_project_version type:patch - increments 0.0.X\n"
  lane :increment_project_version do |options|
    type = options[:type]

    UI.user_error! 'Type is mandatory' if type.nil?

    new_version = increment_version_number(
      bump_type: type
    )

    increment_static_version(
      file_path: PATH_GLIA_STATIC_VALUES,
      version: new_version
    )

    new_version
  end

  private_lane :increment_static_version do |options|
    file_path = options[:file_path]
    UI.user_error!("No filepath specified") unless !file_path.nil?

    version = options[:version]
    UI.user_error!("No version specified") unless !version.nil?

    replace_swift_constant_value(
      file_path: file_path,
      name: 'sdkVersion',
      value: "\"#{version}\""
    )
  end

  desc "Creates a pull request in the repository with whatever changes have been made. "\
    "Used in tandem with Bitrise to update dependencies."
  lane :create_pr_for_dependencies_update do |options|
    branch_name = 'dependencies-update'
    message = "Update dependencies declared in `Podfile`"

    sh "cd .. && scripts/commit_unstaged_changes.sh '#{branch_name}' '#{message}'"
    create_pull_request(
      repo: 'salemove/ios-sdk-widgets',
      title: message,
      head: branch_name,
      base: 'master',
      team_reviewers: ["tm-mobile-ios"]
    )
  end
end
