format_version: "8"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: ios
workflows:
  _increment_project_version:
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            if [ ! -z "$GITHUB_VERSION_INCREMENT_TYPE" ] ; then
              envman add --key VERSION_INCREMENT_TYPE --value "$GITHUB_VERSION_INCREMENT_TYPE"
            fi
    - fastlane@3:
        inputs:
        - lane: ios create_pr_for_increment_project_version type:$VERSION_INCREMENT_TYPE
    envs:
    - opts:
        is_expand: false
      VERSION_INCREMENT_TYPE: patch
  authenticated_increment_project_version:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    after_run:
    - _increment_project_version
  browserstack_upload:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - xcode-archive@4:
        inputs:
        - scheme: $APP_SCHEME
        - team_id: $TEAM_ID
        - export_method: $BITRISE_EXPORT_METHOD
    - browserstack-upload@0:
        inputs:
        - upload_path: $BITRISE_IPA_PATH
        - custom_id: $BROWSERSTACK_APP_ID
        title: Upload test app to BrowserStack
    - deploy-to-bitrise-io@2:
        inputs:
        - notify_email_list: $NOTIFY_EMAILS
    - cache-push@2: {}
    description: Workflow for creating builds of master branch. Triggered on each push to master branch, notifies over email + Slack (external)
  deployment:
    steps:
    - activate-ssh-key@4: {}
    - git-clone@8:
        inputs:
        - fetch_tags: "yes"
    - cache-pull@2: {}
    - cocoapods-install@2: {}
    - xcode-test@4:
        inputs:
        - scheme: $TEST_SCHEME
    - git-tag@1:
        inputs:
        - tag: $NEW_VERSION
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            git fetch --tags
    - generate-changelog@0: {}
    - github-release@0:
        inputs:
        - username: $GITHUB_USERNAME
        - name: Glia iOS Widgets SDK $NEW_VERSION
        - body: $BITRISE_CHANGELOG
        - api_token: $GITHUB_API_TOKEN
        - draft: "no"
        - tag: $NEW_VERSION
        - commit: $GIT_CLONE_COMMIT_HASH
    - script@1:
        inputs:
        - content: pod trunk push GliaWidgets.podspec --verbose --allow-warnings
    - cache-push@2: {}
    after_run:
    - _increment_project_version
  master-build:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - xcode-archive@4:
        inputs:
        - scheme: $APP_SCHEME
        - team_id: $TEAM_ID
        - export_method: $BITRISE_EXPORT_METHOD
    - browserstack-upload@0:
        inputs:
        - upload_path: $BITRISE_IPA_PATH
        - custom_id: $BROWSERSTACK_APP_ID
        title: Upload test app to BrowserStack
    - deploy-to-bitrise-io@2:
        inputs:
        - notify_email_list: $NOTIFY_EMAILS
    - slack@3:
        inputs:
        - channel: '#tm-mobile-builds'
        - text: iOS Build Succeeded!
        - webhook_url_on_error: $SLACK_IOS_WEBHOOK
        - channel_on_error: '#tm-mobile'
        - text_on_error: '@mobile-caretaker iOS Build Failed! (master-build)'
        - emoji_on_error: "\U0001F4A5"
        - color_on_error: '#d9482b'
        - from_username_on_error: Bitrise
        - webhook_url: $SLACK_IOS_WEBHOOK
    - cache-push@2: {}
    description: Workflow for creating builds of master branch. Triggered on each push to master branch, notifies over email + Slack (external)
  pull-request:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash # fail if any commands fails set -e # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully set -o pipefail # debug log set -x
            make clone-snapshots-ci repo_url="https://$GITHUB_USERNAME:$GITHUB_API_TOKEN@$SNAPSHOTS_REPO"
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - recreate-user-schemes@1:
        inputs:
        - project_path: $BITRISE_PROJECT_PATH
    - xcode-test@4:
        inputs:
        - scheme: $TEST_SCHEME
    - xcode-test@4:
        inputs:
        - scheme: $SNAPSHOTS_SCHEME
        - destination: platform=iOS Simulator,name=iPhone 13,OS=15.2
    - xcode-archive@4:
        inputs:
        - scheme: $APP_SCHEME
        - team_id: $TEAM_ID
        - cache_level: none
        - export_method: $BITRISE_EXPORT_METHOD
    - deploy-to-bitrise-io@2:
        inputs:
        - notify_email_list: ""
    - cache-push@2: {}
    description: Workflow for checking and building pull requests. Does not notify anywhere, but shows on the pull request itself.
  update_dependencies:
    steps:
    - activate-ssh-key@4: {}
    - git-clone@8: {}
    - cocoapods-install@2:
        inputs:
        - command: update
    - fastlane@3:
        inputs:
        - lane: ios create_pr_for_dependencies_update
  upload_to_appstore_connect:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@8: {}
    - cache-pull@2: {}
    - certificate-and-profile-installer@1: {}
    - cocoapods-install@2: {}
    - bitrise-step-stamp-appicon-with-version-number@1:
        inputs:
        - stamp_version: TestFlight
        - stamp_path_to_icons: TestingApp/Assets.xcassets/AppIcon.appiconset
    - set-xcode-build-number@1:
        inputs:
        - plist_path: TestingApp/Info.plist
    - xcode-archive@4:
        inputs:
        - scheme: $APP_SCHEME
        - team_id: $TEAM_ID
        - distribution_method: app-store
        - export_method: $BITRISE_EXPORT_METHOD
    - deploy-to-bitrise-io@2: {}
    - deploy-to-itunesconnect-application-loader@1:
        inputs:
        - api_key_path: $BITRISEIO_appStoreAPIKeyUrl_URL
        - api_issuer: 69a6de7f-8b71-47e3-e053-5b8c7c11a4d1
    envs:
    - opts:
        is_expand: false
      BITRISE_SCHEME: Release
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: app-store
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: GliaWidgets.xcworkspace
  - opts:
      is_expand: false
    SDK_SCHEME: GliaWidgets
  - opts:
      is_expand: false
    APP_SCHEME: TestingApp
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
  - opts:
      is_expand: false
    BROWSERSTACK_APP_ID: WidgetsSdkIosTestApp
  - opts:
      is_expand: false
    CORTEX_DEMO_APP_SLUG: 2e5eb3394ea5598e
  - opts:
      is_expand: false
    TEST_SCHEME: GliaWidgetsTests
  - opts:
      is_expand: false
    SNAPSHOTS_SCHEME: SnapshotTests
  - opts:
      is_expand: false
    GIT_AUTHOR_NAME: BitriseBot
  - opts:
      is_expand: false
    GIT_AUTHOR_EMAIL: bitrise@glia.com
trigger_map:
- push_branch: master
  workflow: master-build
- pull_request_target_branch: '*'
  workflow: pull-request
meta:
  bitrise.io:
    stack: osx-xcode-14.2.x-ventura
    machine_type_id: g2-m1.4core
